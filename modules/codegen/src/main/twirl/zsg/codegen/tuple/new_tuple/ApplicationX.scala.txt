@(tagNum: Int, isDotty: Boolean)
package zsg
abstract class ApplicationX@{tagNum}[F[@for(i <- 1 to tagNum) { @if(i > 1) { , } _ }], T <: Context@{tagNum}[F] @for(i <- 1 to tagNum) { , I@{i} }] {
  def application(context: T): F[@for(i <- 1 to tagNum) { @if(i > 1) { , } I@{i} }]
}

object ApplicationX@{tagNum} {
    implicit def applicationImplicit[F[@for(i <- 1 to tagNum) { @if(i > 1) { , } _ }], T <: Context@{tagNum}[F] @for(i <- 1 to tagNum) { , I@{i} }](implicit i: F[@for(i <- 1 to tagNum) { @if(i > 1) { , } I@{i} }]): ApplicationX@{tagNum}[F, T @for(i <- 1 to tagNum) { , I@{i} }] =
        new ApplicationX@{tagNum}[F, T @for(i <- 1 to tagNum) { , I@{i} }] {
            def application(context: T): F[@for(i <- 1 to tagNum) { @if(i > 1) { , } I@{i} }] = i
        }
}